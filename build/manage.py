
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Button, PhotoImage, messagebox
from tkinter import ttk
import subprocess

import mysql.connector
def connect_db():
    return mysql.connector.connect(
        host="localhost",
        user="root",
        password="",
        database="attendance"
    )

# Load images
def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

# Clear entry fields
def clear_fields():
    entry_1.delete(0, 'end')
    entry_2.delete(0, 'end')
    entry_3.delete(0, 'end')
    entry_4.delete(0, 'end')
    entry_5.delete(0, 'end')

# Load data into Treeview
def load_data():
    for i in tree.get_children():
        tree.delete(i)
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM students")
    rows = cursor.fetchall()
    for row in rows:
        tree.insert("", "end", values=row)
    conn.close()

# Add new student
def add_student():
    name = entry_2.get()
    age = entry_3.get()
    gender = entry_4.get()
    course = entry_5.get()

    if name and age and gender and course:
        conn = connect_db()
        cursor = conn.cursor()
        cursor.execute("INSERT INTO students (name, age, gender, course) VALUES (%s, %s, %s, %s)",
                       (name, age, gender, course))
        conn.commit()
        conn.close()
        load_data()
        clear_fields()
        messagebox.showinfo("Success", "Create Student Success!")
    else:
        messagebox.showerror("Error", "Please fill all fields")


# Update student
def update_student():
    student_id = entry_1.get()
    name = entry_2.get()
    age = entry_3.get()
    gender = entry_4.get()
    course = entry_5.get()

    if student_id and name and age and gender and course:
        conn = connect_db()
        cursor = conn.cursor()
        cursor.execute("UPDATE students SET name=%s, age=%s, gender=%s, course=%s WHERE student_id=%s",
                       (name, age, gender, course, student_id))
        conn.commit()
        conn.close()
        load_data()
        clear_fields()
        messagebox.showinfo("Success", "Update Student Success!")
    else:
        messagebox.showerror("Error", "Please fill all fields")

# Delete student
def delete_student():
    student_id = entry_1.get()
    if student_id:
        conn = connect_db()
        cursor = conn.cursor()
        cursor.execute("DELETE FROM students WHERE student_id=%s", (student_id,))
        conn.commit()
        conn.close()
        load_data()
        clear_fields()
        messagebox.showinfo("Success", "Delete Student Success!")
    else:
        messagebox.showerror("Error", "Please select a student to delete")

# Select student for update
def select_student(event):
    selected_item = tree.selection()
    if selected_item:
        student = tree.item(selected_item)['values']
        entry_1.delete(0, 'end')  # ID entry
        entry_1.insert(0, student[0])
        entry_2.delete(0, 'end')  # Name entry
        entry_2.insert(0, student[1])
        entry_3.delete(0, 'end')  # Age entry
        entry_3.insert(0, student[2])
        entry_4.delete(0, 'end')  # Gender entry
        entry_4.insert(0, student[3])
        entry_5.delete(0, 'end')  # Course entry
        entry_5.insert(0, student[4])


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\xampp\htdocs\attendance\build\assets\frame1")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def open_dashboard():
    window.destroy()
    script_dir = Path(__file__).resolve().parent
    addpet_path = script_dir / "dashboard.py"
    subprocess.run(["python", str(addpet_path)])

window = Tk()

window.geometry("1235x933")
window.configure(bg = "#6E6A7C")


canvas = Canvas(
    window,
    bg = "#6E6A7C",
    height = 933,
    width = 1235,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)


canvas.create_rectangle(
    479.0,
    202.0,
    1155.0,
    849.0,
    fill="#D9D9D9",
    outline="")

canvas.create_rectangle(
    0.0,
    0.0,
    1235.0,
    125.0,
    fill="#007527",
    outline="")

columns = ("student_id", "name", "age", "gender","course")
tree = ttk.Treeview(window, columns=columns, show='headings')
tree.heading("student_id", text="#")
tree.heading("name", text="Name")
tree.heading("age", text="Age")
tree.heading("gender", text="Gender")
tree.heading("course", text="Course")


tree.column("student_id", anchor="center", width=100)
tree.column("name", anchor="center", width=100)
tree.column("age", anchor="center", width=100)
tree.column("gender", anchor="center", width=100)
tree.column("course", anchor="center", width=100)


tree.place(x=479.0, y=202.0, width=676.0, height=647.0)
tree.bind("<ButtonRelease-1>", select_student)

canvas.create_text(
    798.0,
    33.0,
    anchor="nw",
    text="Manage Student",
    fill="#FFFFFF",
    font=("Inter ExtraBold", 36 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=open_dashboard,
    relief="flat"
)
button_1.place(
    x=18.0,
    y=27.0,
    width=122.0,
    height=76.0
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    233.0,
    253.0,
    image=entry_image_1
)
# ID entry
entry_1 = Entry(
    bd=0,
    bg="#FDF2F2",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=86.0,
    y=223.0,
    width=294.0,
    height=58.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    236.0,
    354.0,
    image=entry_image_2
)
#Name entry
entry_2 = Entry(
    bd=0,
    bg="#FDF2F2",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=89.0,
    y=324.0,
    width=294.0,
    height=58.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    236.0,
    455.0,
    image=entry_image_3
)
#age entry
entry_3 = Entry(
    bd=0,
    bg="#FDF2F2",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=89.0,
    y=425.0,
    width=294.0,
    height=58.0
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    236.0,
    566.0,
    image=entry_image_4
)
# Gender entry
entry_4 = Entry(
    bd=0,
    bg="#FDF2F2",
    fg="#000716",
    highlightthickness=0
)
entry_4.place(
    x=89.0,
    y=536.0,
    width=294.0,
    height=58.0
)

entry_image_5 = PhotoImage(
    file=relative_to_assets("entry_5.png"))
entry_bg_5 = canvas.create_image(
    236.0,
    667.0,
    image=entry_image_5
)
#Course entry
entry_5 = Entry(
    bd=0,
    bg="#FDF2F2",
    fg="#000716",
    highlightthickness=0
)
entry_5.place(
    x=89.0,
    y=637.0,
    width=294.0,
    height=58.0
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    140.0,
    202.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    158.0,
    303.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    158.0,
    410.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    163.0,
    521.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    163.0,
    622.0,
    image=image_image_5
)
## Add button
button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=add_student,
    relief="flat"
)
button_2.place(
    x=108.0,
    y=718.0,
    width=238.99935913085938,
    height=48.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=update_student,
    relief="flat"
)
button_3.place(
    x=107.0,
    y=787.0,
    width=238.99935913085938,
    height=48.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=delete_student,
    relief="flat"
)
button_4.place(
    x=108.0,
    y=846.0,
    width=238.99935913085938,
    height=48.0
)

window.resizable(False, False)
load_data()
window.mainloop()